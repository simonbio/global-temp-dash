vars <- c('Angola')
test %>%
filter(Country %in% vars) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
vars <- c('Angola', 'Congo')
test %>%
filter(Country %in% vars) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
vars <- c('Angola', 'Germany')
test %>%
filter(Country %in% vars) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
View(test)
country <- read_csv('GlobalLandTemperaturesByCountry.csv')
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
test <- country %>% group_by(Country, dt) %>% summarise(AverageTemperature = mean(AverageTemperature))
View(test)
vars <- c('Angola', 'Germany')
test %>%
filter(Country %in% vars) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
View(test)
test$dt
test %>%
filter(Country %in% vars & dt >= min(.$dt))
min(test$dt)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
blabla
plot(cars)
read.csv()
read.csv()
blabla
sadasd
sadasd
sadasda
blabla
ls()
ls
ls()
list(ls)
list(ls())
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
test <- country %>% group_by(Country, dt) %>% summarise(AverageTemperature = mean(AverageTemperature))
vars <- c('Angola', 'Germany')
test %>%
filter(Country %in% vars & dt >= min(.$dt)) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
library('tidyverse')
library(highcharter)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
test <- country %>% group_by(Country, dt) %>% summarise(AverageTemperature = mean(AverageTemperature))
vars <- c('Angola', 'Germany')
test %>%
filter(Country %in% vars & dt >= min(.$dt)) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
head)test
head(test)
vars <- c('Germany')
test %>%
filter(Country %in% vars & dt >= min(.$dt)) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
Data = data.frame(date = seq(Sys.Date(), Sys.Date()-20, by = '-1 day'), value1 = 10:30, variable = "A") %>% mutate(value2 = cumsum(value1))
View(Data)
hchart(Data,
"column",
hcaes(x = date, y = value1, group = variable)) %>%
hc_add_series(data = Data, hcaes(x = date, y = value2), type = 'area')
test <- country %>% group_by(Country, dt) %>% summarise(AverageTemperature = mean(AverageTemperature)) %>%
arrange(dt)
vars <- c('Germany')
test %>%
filter(Country %in% vars & dt >= min(.$dt)) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
vars <- c('Germany', 'Spain')
test %>%
filter(Country %in% vars & dt >= min(.$dt)) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
vars <- c('Germany', 'Spain', 'Peru')
test %>%
filter(Country %in% vars & dt >= min(.$dt)) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
vars <- c('Germany', 'Spain', 'Peru')
test %>%
filter(Country %in% vars) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
names_test <- test$Country
names_test <- unique(test$Country)
names_test
as.list(names_test)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
country %>% filter(dt >= 1900 & dt <= 2000 & name %in% vars) %>%
group_by(name, dt) %>% summarise('Average Temp' = mean(AverageTemperature)) %>%
arrange(dt)
country %>% filter(dt >= 1900 & dt <= 2000 & Country %in% vars) %>%
group_by(name, dt) %>% summarise('Average Temp' = mean(AverageTemperature)) %>%
arrange(dt)
country %>% filter(dt >= 1900 & dt <= 2000 & Country %in% vars) %>%
group_by(Country, dt) %>% summarise('Average Temp' = mean(AverageTemperature)) %>%
arrange(dt)
View(country)
country %>% filter(Country == Germany & dt == 1900)
country %>% filter(Country == 'Germany' & dt == 1900)
country %>% filter(Country == 'Germany' & dt == 1900) %>% mean(AverageTemperature)
country %>% filter(Country == 'Germany' & dt == 1900)
test <- country %>% filter(Country == 'Germany' & dt == 1900)
mean(test$AverageTemperature)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
# Load the world Map data
data(worldgeojson, package = "highcharter")
force(worldgeojson)
View(worldgeojson)
hc <- highchart() %>%
hc_add_series_map(
worldgeojson, country, value = "AverageTemperature", joinBy = c('name','Country'),
name = "LifeExpectancy"
)  %>%
hc_colorAxis(stops = color_stops()) %>%
hc_title(text = "World Map") %>%
hc_subtitle(text = "Life Expectancy in 2015")
hc
hc <- highchart() %>%
hc_add_series_map(
worldgeojson, country, value = "AverageTemperature", joinBy = c('name','Country'),
name = "LifeExpectancy"
)  %>%
hc_colorAxis(stops = color_stops()) %>%
hc_title(text = "World Map") %>%
hc_subtitle(text = "Life Expectancy in 2015")
hc
library(tidyverse)
library(DT)
library(highcharter)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
mapdata <- get_data_from_map(download_map_data("custom/world-eckert3-highres"))
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
View(country)
head(country)
hcmap(
map = "custom/world-eckert3-highres",
data = country,
value = 'AverageTemperature',
joinBy = c("Country", "name"),
name = "Temperature (Celsius) ",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
# borderColor = "#FAFAFA",
# borderWidth = 0.1,
tooltip = list(
valueDecimals = 2,
valueSuffix = "°C"
)
) %>% hc_title(text ="Average World Temperature ")
#rename
country <- country %>% rename(name = Country) %>% semi_join(mapdata, by = 'name')
hcmap(
map = "custom/world-eckert3-highres",
data = country,
value = 'AverageTemperature',
joinBy = c("Country", "name"),
name = "Temperature (Celsius) ",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
# borderColor = "#FAFAFA",
# borderWidth = 0.1,
tooltip = list(
valueDecimals = 2,
valueSuffix = "°C"
)
) %>% hc_title(text ="Average World Temperature ")
country  %>%
group_by(name, dt) %>% summarise('Average Temp' = mean(AverageTemperature)) %>%
arrange(dt)
country  %>%
group_by(name, dt) %>% summarise('Average Temp' = mean(AverageTemperature)) %>%
arrange(dt)
country$dt <- format(country$dt, format="%Y")
View(country)
country  %>%
group_by(name, dt) %>% summarise('Average Temp' = mean(AverageTemperature)) %>%
arrange(dt)
country <- country  %>%
group_by(name, dt) %>% summarise('Average Temp' = mean(AverageTemperature)) %>%
arrange(dt)
View(country)
hcmap(
map = "custom/world-eckert3-highres",
data = country,
value = 'AverageTemperature',
joinBy = c("Country", "name"),
name = "Temperature (Celsius) ",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
# borderColor = "#FAFAFA",
# borderWidth = 0.1,
tooltip = list(
valueDecimals = 2,
valueSuffix = "°C"
)
) %>% hc_title(text ="Average World Temperature ")
hcmap(
map = "custom/world-eckert3-highres",
data = country,
value = 'Average Temp',
joinBy = c("Country", "name"),
name = "Temperature (Celsius) ",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
# borderColor = "#FAFAFA",
# borderWidth = 0.1,
tooltip = list(
valueDecimals = 2,
valueSuffix = "°C"
)
) %>% hc_title(text ="Average World Temperature ")
head(country)
hcmap(
map = "custom/world-eckert3-highres",
data = country,
value = 'Average Temp',
joinBy = c("name", "name"),
name = "Temperature (Celsius) ",
#dataLabels = list(enabled = TRUE, format = "{point.name}"),
# borderColor = "#FAFAFA",
# borderWidth = 0.1,
tooltip = list(
valueDecimals = 2,
valueSuffix = "°C"
)
) %>% hc_title(text ="Average World Temperature ")
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
mapdata <- get_data_from_map(download_map_data("custom/world-eckert3-highres"))
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
View(country)
#rename
country <- country %>% rename(name = Country) %>% semi_join(mapdata, by = 'name')
View(country)
glimpse(country)
as.Date(format(country$dt, format="%Y"))
as.Date(country$dt, format="%Y")
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- as.Date(country$dt, format="%Y")
View(country)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
#rename
country <- country %>% rename(name = Country) %>% semi_join(mapdata, by = 'name')
c_choices <- unique(country$name)
country %>% filter(dt >= input$period[1] & dt <= input$period[2] & name %in% input$countries) %>%
group_by(name, dt) %>% summarise('Average Temp' = mean(AverageTemperature)) %>%
arrange(dt)
country %>%
group_by(name, dt) %>% summarise('Average Temp' = mean(AverageTemperature)) %>%
arrange(dt)
country %>%
group_by(name, dt) %>% summarise(average_temp = mean(AverageTemperature)) %>%
arrange(dt)
View(mapdata)
test <- country %>% group_by(Country, dt) %>% summarise(AverageTemperature = mean(AverageTemperature)) %>%
arrange(dt)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
test <- country %>% group_by(Country, dt) %>% summarise(AverageTemperature = mean(AverageTemperature)) %>%
arrange(dt)
vars <- c('Germany', 'Spain', 'Peru')
test %>%
filter(Country %in% vars) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
View(test)
country %>%
group_by(name, dt) %>% summarise(average_temp = mean(AverageTemperature)) %>%
arrange(dt)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
#rename
country <- country %>% rename(name = Country) %>% semi_join(mapdata, by = 'name')
c_choices <- unique(country$name)
country %>% filter(dt >= 1900 & dt <= 2000 & Country %in% vars) %>%
group_by(name, dt) %>% summarise(average_temp = mean(AverageTemperature)) %>%
arrange(dt)
country %>% filter(dt >= 1900 & dt <= 2000 & name %in% vars) %>%
group_by(name, dt) %>% summarise(average_temp = mean(AverageTemperature)) %>%
arrange(dt)
glimpse(test)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
#rename
country <- country %>% rename(name = Country) %>% semi_join(mapdata, by = 'name')
c_choices <- unique(country$name)
country %>% group_by(name, dt) %>% summarise(average_temp = mean(AverageTemperature)) %>%
filter(dt >= 1900 & dt <= 2000 & name %in% vars) %>%
arrange(dt)
test1 <- country %>% group_by(name, dt) %>% summarise(average_temp = mean(AverageTemperature)) %>%
filter(dt >= 1900 & dt <= 2000 & name %in% vars) %>%
arrange(dt)
View(test)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
test <- country %>% group_by(Country, dt) %>% summarise(AverageTemperature = mean(AverageTemperature)) %>%
arrange(dt)
test1 <- country %>%  filter(dt >= 1900 & dt <= 2000 & name %in% vars) %>%
group_by(name, dt) %>%
summarise(average_temp = mean(AverageTemperature)) %>%
arrange(dt)
View(test)
head(test)
head(test1)
test <- country %>% filter(dt >= 1900 & dt <= 2000) %>%  group_by(Country, dt) %>% summarise(AverageTemperature = mean(AverageTemperature)) %>%
arrange(dt)
vars <- c('Germany', 'Spain', 'Peru')
test %>%
filter(Country %in% vars) %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
test <- country %>% filter(dt >= 1900 & dt <= 2000 & Country %in% vars) %>%  group_by(Country, dt) %>% summarise(AverageTemperature = mean(AverageTemperature)) %>%
arrange(dt)
test %>%
hchart(.,
type = "line",
hcaes(x = dt,
y = AverageTemperature,
group = 'Country'))
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
#rename
country <- country %>% rename(name = Country) %>% semi_join(mapdata, by = 'name')
View(country)
test1 <- country %>%  filter( name == 'Grenada') %>%
group_by(name, dt) %>%
summarise(average_temp = mean(AverageTemperature)) %>%
arrange(dt)
View(test1)
country <- read_csv('GlobalLandTemperaturesByCountry.csv') %>% na.omit()
# String manipulation
country$Country <- str_replace_all(country$Country, 'United States', 'United States of America')
country$Country <- str_replace_all(country$Country, '^Congo.\\(.*', 'Democratic Republic of the Congo')
country$Country <- str_replace_all(country$Country, '^Congo', 'Republic of Congo')
country$Country <- str_replace_all(country$Country, 'Tanzania', 'United Republic of Tanzania')
# remove Denmark measurement containing Greenland temps
country <- country[!country$Country == 'Denmark',]
country$Country <- str_replace_all(country$Country, 'Denmark.*', 'Denmark')
country$dt <- format(country$dt, format="%Y")
#rename
country <- country %>% rename(name = Country) %>% semi_join(mapdata, by = 'name')
c_choices <- unique(country$name)
test1 <- country %>%  filter( name == 'Afghanistan') %>%
group_by(name, dt) %>%
summarise(average_temp = mean(AverageTemperature)) %>%
arrange(dt)
View(test1)
